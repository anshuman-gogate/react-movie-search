{"version":3,"sources":["Components/Header.js","Components/Movie.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Movie","props","src","alt","title","releaseDate","rating","desc","Form","useState","query","setQuery","movies","setMovies","isLoading","setIsLoading","APIKey","a","url","fetch","resp","json","data","console","log","results","mapMovies","length","filter","movie","poster_path","map","release_date","vote_average","overview","id","loadingEle","onSubmit","e","preventDefault","alert","fetchData","type","name","placeholder","onChange","target","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAUeA,MARf,WACI,OACI,wBAAQC,UAAU,SAAlB,SACI,uD,8BCaGC,MAhBf,SAAeC,GACX,OACI,sBAAKF,UAAU,OAAf,UACG,qBAAKA,UAAU,sBAAf,SACK,qBAAKG,IAAKD,EAAMC,IAAKC,IAAKF,EAAMG,MAAQ,SAAUL,UAAU,gBAEjE,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBE,EAAMG,QAC7B,oBAAGL,UAAU,eAAb,UAA4B,mDAA6BE,EAAMI,eAC/D,oBAAGN,UAAU,UAAb,UAAuB,8CAAwBE,EAAMK,UACrD,mBAAGP,UAAU,OAAb,SAAqBE,EAAMM,cCoF3BC,MA7Ff,WAEI,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAmCJ,oBAAS,GAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KAGMC,EAAS,mCATH,4CAWZ,gCAAAC,EAAA,6DAGUC,EAHV,0DAGmEF,EAHnE,iCAGkGN,EAHlG,6BAM2BS,MAAMD,GANjC,cAMcE,EANd,gBAO2BA,EAAKC,OAPhC,OAOcC,EAPd,OAQQC,QAAQC,IAAIF,GACZT,EAAUS,EAAKG,SACfV,GAAa,GAVrB,kDAaQQ,QAAQC,IAAI,SAbpB,QAgBIb,EAAS,IAhBb,2DAXY,sBAyCZ,IAAIe,EAAY,GAEK,IAAlBd,EAAOe,SAEND,EAAYd,EAAOgB,QAAO,SAAAC,GAAK,OAAIA,EAAMC,eAAaC,KAAI,SAAAF,GAC1D,OACY,cAAC,EAAD,CAEI3B,IAAG,0DAAqD2B,EAAMC,aAC9D1B,MAAOyB,EAAMzB,MACbC,YAAawB,EAAMG,aACnB1B,OAAQuB,EAAMI,aACd1B,KAAMsB,EAAMK,UALPL,EAAMM,QAY/B,IAAMC,EACF,sBAAKrC,UAAU,iBAAf,UACI,qBAAKA,UAAU,kBACf,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,mBAK3B,OACI,sBAAKA,UAAU,iBAAf,UACI,uBAAMA,UAAY,YAAYsC,SA5CtC,SAAiBC,GACbA,EAAEC,iBACW,KAAV7B,GAA0B,MAAVA,GAA2B,OAAVA,GAA4B,QAAVA,GAClDC,EAAS,IACT6B,MAAM,+BAGNzB,GAAa,GArCT,mCAsCJ0B,KAoCA,UACI,uBACIC,KAAK,OACLC,KAAK,QACL5C,UAAU,gBACV6C,YAAY,qBACZC,SAAW,SAACP,GAAD,OAAO3B,EAAS2B,EAAEQ,OAAOC,QACpCA,MAAOrC,IAEX,wBAAQgC,KAAK,SAAS3C,UAAU,qBAAhC,uBAGJ,qBAAKA,UAAU,wBAAf,SACKe,EAAYsB,EAAaV,QC7E3BsB,MATf,WACE,OACE,sBAAKjD,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.923aba33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>React Movie Search</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Movie(props) {\r\n    return (\r\n        <div className=\"card\">\r\n           <div className=\"card__img-container\">\r\n                <img src={props.src} alt={props.title + \"Poster\"} className=\"card__img\"/>\r\n           </div>\r\n           <div className=\"card__content\">\r\n               <h3 className=\"title\">{props.title}</h3>\r\n               <p className=\"release-date\"><span>Release Date : </span>{props.releaseDate}</p>\r\n               <p className=\"ratings\"><span>Ratings : </span>{props.rating}</p>\r\n               <p className=\"desc\">{props.desc}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React , {useState} from 'react';\r\nimport Movie from \"./Movie.js\";\r\n\r\nfunction Form() {\r\n    // state to manage value of text field\r\n    const [query , setQuery] = useState('');\r\n    // state to manage the response we get from API\r\n    const [movies , setMovies] = useState([]);\r\n    // State for loading information\r\n    const [isLoading , setIsLoading] = useState(false);\r\n\r\n    // API key\r\n    const APIKey = '3a4dc9683091f978082bc403b01d086a';\r\n\r\n    async function fetchData() {\r\n        // e.preventDefault();\r\n        // Url we'll be using to fetch data\r\n        const url = `https:api.themoviedb.org/3/search/movie?api_key=${APIKey}&language=en-US&query=${query}&page=1`;\r\n\r\n        try {\r\n            const resp = await fetch(url);\r\n            const data = await resp.json();\r\n            console.log(data);\r\n            setMovies(data.results);\r\n            setIsLoading(false);\r\n        }\r\n        catch {\r\n            console.log(\"error\");\r\n        }\r\n\r\n        setQuery('');\r\n    }\r\n\r\n    function checkTf(e) {\r\n        e.preventDefault();\r\n        if(query === \"\" || query === \" \" || query === \"  \" || query === \"   \") {\r\n            setQuery('');\r\n            alert(\"please enter a valid name\");\r\n        }\r\n        else {\r\n            setIsLoading(true);\r\n            fetchData();\r\n        }\r\n    }\r\n    let mapMovies = [];\r\n\r\n    if(movies.length !== 0)\r\n    {\r\n        mapMovies = movies.filter(movie => movie.poster_path).map(movie => {\r\n        return  (\r\n                    <Movie \r\n                        key={movie.id} \r\n                        src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} \r\n                        title={movie.title} \r\n                        releaseDate={movie.release_date} \r\n                        rating={movie.vote_average} \r\n                        desc={movie.overview}\r\n                    />\r\n                )\r\n        })\r\n    }\r\n\r\n    // loading animation elements\r\n    const loadingEle = \r\n        <div className=\"load-container\">\r\n            <div className=\"img-container\"></div>\r\n            <div className=\"content-container\">\r\n                <div className=\"rect\"></div>\r\n                <div className=\"rect\"></div>\r\n                <div className=\"rect\"></div>\r\n                <div className=\"big-rect\"></div>\r\n            </div>\r\n        </div>\r\n    \r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className = \"inputForm\" onSubmit={checkTf}>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"query\" \r\n                    className=\"inputForm__tf\" \r\n                    placeholder=\"Search a movie....\" \r\n                    onChange={ (e) => setQuery(e.target.value) }\r\n                    value={query}\r\n                />\r\n                <button type=\"submit\" className=\"inputForm__btn btn\">Search</button>\r\n            </form>\r\n\r\n            <div className=\"movie-cards-container\">\r\n                {isLoading ? loadingEle : mapMovies}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react';\nimport Header from './Components/Header.js';\nimport Form from './Components/Form.js';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Form />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}